{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/src/components/providers.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Developer/Portfolio 2/src/components/providers.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,scAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/src/components/providers.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Developer/Portfolio 2/src/components/providers.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,scAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/src/features/profile/data/user.ts"],"sourcesContent":["import type { User } from \"@/features/profile/types/user\";\n\nexport const USER: User = {\n  firstName: \"Manas\",\n  lastName: \"Singh\",\n  displayName: \"Manas Singh\",\n  username: \"Manas2705\",\n  gender: \"male\",\n  pronouns: \"he/him\",\n  bio: \"Creating with code. Small details matter.\",\n  flipSentences: [\n    \"Creating with code. Small details matter.\",\n    \"Software Engineer\",\n    \"Frontend Alchemist\",\n  ],\n  address: \"Lucknow, Uttar Pradesh, India\",\n  phoneNumber: \"KzkxOTkzNTY3NTY2OQ==\", // +919935675669 encoded in Base64 (E.164 required)\n  email: \"bWFuYXNzaW5naDI3MDVAZ21haWwuY29t\", // base64 encoded\n  website: \"https://mnz-dev.netlify.app\",\n  jobTitle: \"Full Stack Engineer\",\n  jobs: [\n    {\n      title: \"Frontend Developer Intern\",\n      company: \"Hypweb Solutions LLP\",\n      website: \"https://hypweb.in/\",\n    },\n    {\n      title: \"Software Developer Intern\",\n      company: \"Radical Logix\",\n      website: \"https://www.radicallogix.com/\",\n    },\n  ],\n  about: `\nHello, World! I’m Manas Singh — a Full Stack Web Developer and Designer passionate about crafting high-performance, visually engaging, and animation-rich web experiences.\n\nWith hands-on experience in modern web technologies, I specialize in building dynamic, user-centric applications with seamless interactions and intuitive designs. My expertise spans front-end and back-end development, with a primary focus on web animations that bring interfaces to life.\n\nBeyond my professional work, I actively participate in innovation-driven competitions and have proudly won two national-level hackathons:\n\n[HackOverflow 7.0](https://hackoverflow07.devfolio.co/) organized by NIT Durgapur\n\n[Live the Code 3.0](https://live-the-code-3.devfolio.co/)\n\nThese achievements reflect my passion for problem-solving, rapid prototyping, and turning ideas into impactful digital solutions.\n\nLet’s connect and create something extraordinary!\n  `,\n  avatar: \"/r/ai image.jpeg\",\n  ogImage:\n    \"https://assets.chanhdai.com/images/screenshot-og-image-light.png?t=1755355653\",\n  namePronunciationUrl: \"https://assets.chanhdai.com/audio/chanhdai.mp3\",\n  keywords: [\n    \"manas\",\n    \"mnz\",\n    \"manazz\",\n    \"mns\"\n  ],\n  dateCreated: \"2025-08-28\", // YYYY-MM-DD\n};\n"],"names":[],"mappings":";;;;AAEO,MAAM,OAAa;IACxB,WAAW;IACX,UAAU;IACV,aAAa;IACb,UAAU;IACV,QAAQ;IACR,UAAU;IACV,KAAK;IACL,eAAe;QACb;QACA;QACA;KACD;IACD,SAAS;IACT,aAAa;IACb,OAAO;IACP,SAAS;IACT,UAAU;IACV,MAAM;QACJ;YACE,OAAO;YACP,SAAS;YACT,SAAS;QACX;QACA;YACE,OAAO;YACP,SAAS;YACT,SAAS;QACX;KACD;IACD,OAAO,CAAC;;;;;;;;;;;;;;EAcR,CAAC;IACD,QAAQ;IACR,SACE;IACF,sBAAsB;IACtB,UAAU;QACR;QACA;QACA;QACA;KACD;IACD,aAAa;AACf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/src/config/site.ts"],"sourcesContent":["import { USER } from \"@/features/profile/data/user\";\nimport type { NavItem } from \"@/types/nav\";\n\nexport const SITE_INFO = {\n  name: USER.displayName,\n  url: process.env.APP_URL || \"https://chanhdai.com\",\n  ogImage: USER.ogImage,\n  description: USER.bio,\n  keywords: USER.keywords,\n};\n\nexport const META_THEME_COLORS = {\n  light: \"#ffffff\",\n  dark: \"#09090b\",\n};\n\nexport const MAIN_NAV: NavItem[] = [\n  {\n    title: \"Manas.io\",\n    href: \"/\",\n  },\n];\n\nexport const SOURCE_CODE_GITHUB_REPO = \"ncdai/chanhdai.com\";\nexport const SOURCE_CODE_GITHUB_URL = \"https://github.com/00Manas-Singh00\";\n\nexport const UTM_PARAMS = {\n  utm_source: \"chanhdai.com\",\n  utm_medium: \"portfolio_website\",\n  utm_campaign: \"referral\",\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;AAGO,MAAM,YAAY;IACvB,MAAM,+KAAI,CAAC,WAAW;IACtB,KAAK,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC5B,SAAS,+KAAI,CAAC,OAAO;IACrB,aAAa,+KAAI,CAAC,GAAG;IACrB,UAAU,+KAAI,CAAC,QAAQ;AACzB;AAEO,MAAM,oBAAoB;IAC/B,OAAO;IACP,MAAM;AACR;AAEO,MAAM,WAAsB;IACjC;QACE,OAAO;QACP,MAAM;IACR;CACD;AAEM,MAAM,0BAA0B;AAChC,MAAM,yBAAyB;AAE/B,MAAM,aAAa;IACxB,YAAY;IACZ,YAAY;IACZ,cAAc;AAChB","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/ibm_plex_sans_2fc5a022.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"ibm_plex_sans_2fc5a022-module__JHRiQG__className\",\n  \"variable\": \"ibm_plex_sans_2fc5a022-module__JHRiQG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/ibm_plex_sans_2fc5a022.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22IBM_Plex_Sans%22,%22arguments%22:[{%22weight%22:[%22400%22,%22500%22,%22600%22],%22display%22:%22swap%22,%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22}],%22variableName%22:%22fontSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'IBM Plex Sans', 'IBM Plex Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/ibm_plex_mono_713c6c8d.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"ibm_plex_mono_713c6c8d-module__75UuTG__className\",\n  \"variable\": \"ibm_plex_mono_713c6c8d-module__75UuTG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/ibm_plex_mono_713c6c8d.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22IBM_Plex_Mono%22,%22arguments%22:[{%22weight%22:[%22400%22,%22500%22,%22600%22],%22display%22:%22swap%22,%22subsets%22:[%22latin%22],%22variable%22:%22--font-mono%22}],%22variableName%22:%22fontMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'IBM Plex Mono', 'IBM Plex Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/src/app/layout.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\n\nimport type { Metadata, Viewport } from \"next\";\nimport Script from \"next/script\";\nimport type { WebSite, WithContext } from \"schema-dts\";\n\nimport { Providers } from \"@/components/providers\";\nimport { META_THEME_COLORS, SITE_INFO } from \"@/config/site\";\nimport { USER } from \"@/features/profile/data/user\";\nimport { fontMono, fontSans } from \"@/lib/fonts\";\n\nfunction getWebSiteJsonLd(): WithContext<WebSite> {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    name: SITE_INFO.name,\n    url: SITE_INFO.url,\n    alternateName: [USER.username],\n  };\n}\n\n// Thanks @shadcn-ui, @tailwindcss\nconst darkModeScript = String.raw`\n  try {\n    if (localStorage.theme === 'dark' || ((!('theme' in localStorage) || localStorage.theme === 'system') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.querySelector('meta[name=\"theme-color\"]').setAttribute('content', '${META_THEME_COLORS.dark}')\n    }\n  } catch (_) {}\n\n  try {\n    if (/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)) {\n      document.documentElement.classList.add('os-macos')\n    }\n  } catch (_) {}\n`;\n\nexport const metadata: Metadata = {\n  metadataBase: new URL(SITE_INFO.url),\n  alternates: {\n    canonical: \"/\",\n  },\n  title: {\n    template: `%s – ${SITE_INFO.name}`,\n    default: `${USER.displayName} – ${USER.jobTitle}`,\n  },\n  description: SITE_INFO.description,\n  keywords: SITE_INFO.keywords,\n  authors: [\n    {\n      name: \"ncdai\",\n      url: SITE_INFO.url,\n    },\n  ],\n  creator: \"ncdai\",\n  openGraph: {\n    siteName: SITE_INFO.name,\n    url: \"/\",\n    type: \"profile\",\n    firstName: USER.firstName,\n    lastName: USER.lastName,\n    username: USER.username,\n    gender: USER.gender,\n    images: [\n      {\n        url: SITE_INFO.ogImage,\n        width: 1200,\n        height: 630,\n        alt: SITE_INFO.name,\n      },\n    ],\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    creator: \"@iamncdai\", // Twitter username\n    images: [SITE_INFO.ogImage],\n  },\n  icons: {\n    icon: [\n      {\n        url: \"https://assets.chanhdai.com/images/favicon.ico\",\n        sizes: \"any\",\n      },\n      {\n        url: \"https://assets.chanhdai.com/images/favicon.svg\",\n        type: \"image/svg+xml\",\n      },\n    ],\n    apple: {\n      url: \"https://assets.chanhdai.com/images/apple-touch-icon.png\",\n      type: \"image/png\",\n      sizes: \"180x180\",\n    },\n  },\n};\n\nexport const viewport: Viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n  viewportFit: \"cover\",\n  themeColor: META_THEME_COLORS.light,\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html\n      lang=\"en\"\n      className={`${fontSans.variable} ${fontMono.variable}`}\n      suppressHydrationWarning\n    >\n      <head>\n        <script\n          type=\"text/javascript\"\n          dangerouslySetInnerHTML={{ __html: darkModeScript }}\n        />\n        {/*\n          Thanks @tailwindcss. We inject the script via the `<Script/>` tag again,\n          since we found the regular `<script>` tag to not execute when rendering a not-found page.\n         */}\n        <Script src={`data:text/javascript;base64,${btoa(darkModeScript)}`} />\n        <script\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(getWebSiteJsonLd()).replace(/</g, \"\\\\u003c\"),\n          }}\n        />\n      </head>\n\n      <body>\n        <Providers>{children}</Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AAGA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAEA,SAAS;IACP,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM,+JAAS,CAAC,IAAI;QACpB,KAAK,+JAAS,CAAC,GAAG;QAClB,eAAe;YAAC,+KAAI,CAAC,QAAQ;SAAC;IAChC;AACF;AAEA,kCAAkC;AAClC,MAAM,iBAAiB,OAAO,GAAG,CAAC;;;kFAGgD,EAAE,uKAAiB,CAAC,IAAI,CAAC;;;;;;;;;AAS3G,CAAC;AAEM,MAAM,WAAqB;IAChC,cAAc,IAAI,IAAI,+JAAS,CAAC,GAAG;IACnC,YAAY;QACV,WAAW;IACb;IACA,OAAO;QACL,UAAU,CAAC,KAAK,EAAE,+JAAS,CAAC,IAAI,EAAE;QAClC,SAAS,GAAG,+KAAI,CAAC,WAAW,CAAC,GAAG,EAAE,+KAAI,CAAC,QAAQ,EAAE;IACnD;IACA,aAAa,+JAAS,CAAC,WAAW;IAClC,UAAU,+JAAS,CAAC,QAAQ;IAC5B,SAAS;QACP;YACE,MAAM;YACN,KAAK,+JAAS,CAAC,GAAG;QACpB;KACD;IACD,SAAS;IACT,WAAW;QACT,UAAU,+JAAS,CAAC,IAAI;QACxB,KAAK;QACL,MAAM;QACN,WAAW,+KAAI,CAAC,SAAS;QACzB,UAAU,+KAAI,CAAC,QAAQ;QACvB,UAAU,+KAAI,CAAC,QAAQ;QACvB,QAAQ,+KAAI,CAAC,MAAM;QACnB,QAAQ;YACN;gBACE,KAAK,+JAAS,CAAC,OAAO;gBACtB,OAAO;gBACP,QAAQ;gBACR,KAAK,+JAAS,CAAC,IAAI;YACrB;SACD;IACH;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,QAAQ;YAAC,+JAAS,CAAC,OAAO;SAAC;IAC7B;IACA,OAAO;QACL,MAAM;YACJ;gBACE,KAAK;gBACL,OAAO;YACT;YACA;gBACE,KAAK;gBACL,MAAM;YACR;SACD;QACD,OAAO;YACL,KAAK;YACL,MAAM;YACN,OAAO;QACT;IACF;AACF;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;IACd,aAAa;IACb,YAAY,uKAAiB,CAAC,KAAK;AACrC;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,4aAAC;QACC,MAAK;QACL,WAAW,GAAG,oMAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,oMAAQ,CAAC,QAAQ,EAAE;QACtD,wBAAwB;;0BAExB,4aAAC;;kCACC,4aAAC;wBACC,MAAK;wBACL,yBAAyB;4BAAE,QAAQ;wBAAe;;;;;;kCAMpD,4aAAC,uUAAM;wBAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,iBAAiB;;;;;;kCAClE,4aAAC;wBACC,MAAK;wBACL,yBAAyB;4BACvB,QAAQ,KAAK,SAAS,CAAC,oBAAoB,OAAO,CAAC,MAAM;wBAC3D;;;;;;;;;;;;0BAIJ,4aAAC;0BACC,cAAA,4aAAC,yKAAS;8BAAE;;;;;;;;;;;;;;;;;AAIpB","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.27.4_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,gPACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.27.4_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/Developer/Portfolio 2/node_modules/.pnpm/next@15.5.0_@babel+core@7.27.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.27.4_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/Developer/Portfolio 2/node_modules/.pnpm/next@15.5.0_@babel+core@7.27.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.27.4_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/manas/Developer/Portfolio%202/node_modules/.pnpm/next%4015.5.0_%40babel%2Bcore%407.27.4_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}